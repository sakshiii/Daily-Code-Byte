//Given an array of strings, return the longest common prefix that is shared amongst all strings.
//Note: you may assume all strings only contain lowercase alphabetical characters.
//
//Ex: Given the following arrays...
//
//["colorado", "color", "cold"], return "col"
//["a", "b", "c"], return ""
//["spot", "spotty", "spotted"], return "spot"
import java.util.Scanner;

public class LongestCommonPrefix {

	public static String LCP(String[] strs) {
	    if(strs == null || strs.length == 0)   return "";
	    
	    String pre=strs[0];
	    int i=1;
	    while(i<strs.length)
	    {
	    	while(strs[i].indexOf(pre)!=0)
	    	{
	    		pre=pre.substring(0,pre.length()-1);
	    	}
	    	i++;
	    }
	    return pre;
	}
	public static void main(String[] args) {
		
		String[] sarr=new String[5];
		Scanner sc=new Scanner(System.in);
		for(int i=0;i<5;i++)
			sarr[i]=sc.next();
		System.out.print(LCP(sarr));
	}

}
